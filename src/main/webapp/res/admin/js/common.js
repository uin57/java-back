function dumpPage(a){    var url = $(a).attr("data-href");    location.href=url+ $("#dumpInput").val();}// 调用父级函数function getRootWin() {    var n = window;    var p = n.parent;    while (n != p) {        n = p;        p = p.parent;    }    return n;}function addTab(title, url,id) {    var c = getRootWin();    c.addTab(title, url,id);}function closeCurrent(){    var c = getRootWin();    c.closeCurrent();}function getSelectedArr(grid, key) {    var ids = [];    var rows = $(grid).datagrid('getSelections');    for (var i = 0; i < rows.length; i++) {        ids.push(rows[i][key]);    }    return ids;}function reloadGrid(grid,p){    if(p){        $(grid).datagrid("options").queryParams = p;    }    $(grid).datagrid('reload');    $(grid).datagrid('clearSelections');}function ajaxPost(url, data, func) {    $.ajax({        url : url,        type : 'POST',        dataType : 'json',        data:data,        timeout : 5000,        error : function(XMLHttpRequest, textStatus, errorThrown) {            $.messager.alert('错误', XMLHttpRequest.status+' '+XMLHttpRequest.statusText, 'error');        },        success : function(rel) {            if (rel.status == 200) {                if(func){                    func(rel);                }            } else {                $.messager.alert('错误', rel.content, 'error');            }        }    });}function ajaxData(url, func) {    $.ajax({        url : url,        type : 'GET',        dataType : 'json',        timeout : 5000,        error : function(XMLHttpRequest, textStatus, errorThrown) {            $.messager.alert('错误', XMLHttpRequest.status+' '+XMLHttpRequest.statusText, 'error');        },        success : function(rel) {            if (rel.status == 200) {                if(func){                    func(rel);                }            } else {                $.messager.alert('错误', rel.content, 'error');            }        }    });}function saveData(a,func) {    if ($(a).linkbutton('options').disabled == true) return;    $(a).linkbutton("disable");    var form = $(a).parents("form");    var url = form.attr("url");    form.form('submit', {        url : url,        dataType:'json',        onSubmit: function(param){            param.decorator = '1';            return true;        },        success : function(rel) {            try{                eval('var rel=' + rel);            }catch(e){ }            if (rel.status == 200) {                if(func){                    func(rel);                }            } else {                $.messager.alert('错误', rel.content, 'error');            }            $(a).linkbutton("enable");        }    });}function delAll(url,grid){    var id = $(grid).datagrid("options")['idField'];    var arr = getSelectedArr(grid, id);    if (arr.length > 0) {        var u = url;        if(url.indexOf('?')>0){            u+= "&" + id + '=' + arr.join(',');        } else{            u += '?' + id + '=' + arr.join(',');        }        del(u,function(rel){            reloadGrid(grid);        });    } else {        $.messager.alert('警告', '请先选择要删除的记录。', 'warning');    }}function delTip(url,func,tip) {    $.messager.confirm('提示信息', tip, function(data) {        if (data) {            ajaxData(url,func);        }    });}function del(url,func) {    delTip(url,func,'您确认要删除吗?');}function createGrid(grid, options) {    // 表格    var settings = {        border : false,        fit : true,        fitColumns : false,        url : 'list',        idField : 'id',        singleSelect : false,        pageSize : 25,        pageList:[25,50,100,200],        pagination : true,        rownumbers : true,        onLoadError: function(data){            $.messager.alert('错误', '加载错误,请重试', 'error');        },        onLoadSuccess : function (pageData) {            gridOnLoadSuccess(grid, pageData);        },        toolbar : '#tb'    };    settings = jQuery.extend(true, settings, options);    if (settings.singleSelect === false && !settings.frozenColumns) {        settings.frozenColumns = [ [ {            field : 'ck',            checkbox : true        } ] ];    }    return $(grid).datagrid(settings);}function gridOnLoadSuccess(grid, pageData) {    if (typeof (countFields) != 'undefined') {        doCountField(grid);        pageData.total--;    }    $("#pageDataSum").text(pageData.obj);}function doCountField(grid) {    var param = {};    for (var i = 0; i < countFields.length; i++) {        param[countFields[i]] = countField(grid, countFields[i]);    }    $(grid).datagrid('appendRow', param);    $(".datagrid-view1").first().find(".datagrid-cell-rownumber").last().html("");    $(".datagrid-view1").first().find(".datagrid-cell-check").last().html("");}function countField(grid, colName) {    var rows = $(grid).datagrid('getRows');    var total = 0;    for (var i = 0; i < rows.length; i++) {        total = Math.add(total, rows[i][colName]);    }    return total;}function encodeHtml(value) {    if (value) {        value = value.replace(/</g, "&lt;").replace(/>/g, "&gt;");    }    return value;}function createWin(win,options){    // 窗口    var settings = {        title : '编辑窗口',        closed : true,        modal : true,        shadow : false,        collapsible : false,        minimizable:false,        onClose : function(){            $('a.btn-save').linkbutton("enable");        }    };    settings = jQuery.extend(settings, options);    var w = $(win).window(settings);    $(win).find("a.btn-save,a.btn-cancel").linkbutton();    return w;}function closeWin(win,grid){    $(win).window("close");    if(grid){        reloadGrid(grid);    }}function copyWord(id){    document.getElementById(id).select();    document.execCommand('copy');}function showWin(win, url,loadData,success) {    $(win).window('open');    $(win).find("form").form('clear');    if(success){        $(win).find("form").form({onLoadSuccess:success});    }    if(loadData){        $(win).find("form").form('load',loadData);    }    $(win).find("form").attr("url", url);}function setWebDefaultTime(beginTimeObj, endTimeObj) {    beginTimeObj = beginTimeObj || $('.beginTime');    endTimeObj = endTimeObj || $('.endTime');    var now = new Date();    beginTimeObj.datebox("setValue", now.format('yyyy-MM-dd 00:00:00'));    endTimeObj.datebox("setValue", now.format('yyyy-MM-dd 23:59:59'));}function setWebDefaultTime_Z(beginTimeObj, endTimeObj) {    beginTimeObj = beginTimeObj || $('.beginTime');    endTimeObj = endTimeObj || $('.endTime');    var now = new Date();    beginTimeObj.datebox("setValue", now.format('yyyy-MM-dd'));    endTimeObj.datebox("setValue", now.format('yyyy-MM-dd'));}function timestampToTime(timestamp) {    var date = new Date(timestamp);//时间戳为10位需*1000，时间戳为13位的话不需乘1000    Y = date.getFullYear() + '/';    M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '/';    D = date.getDate() + ' ';    h = date.getHours() + ':';    m = date.getMinutes() + ':';    s = date.getSeconds();    return Y + M + D + h + m + s;}function getFormData(formId) {    form = form || "form";    var p={};    $.each($("#" + formId).serializeArray(),function(){        p[this.name]=this.value;    });    return p;}/* * 以下属于导出excel的代码 */function excelAddEvent(options, sheetName, fileName, formId) {    sheetName = sheetName || ["sheet0"];    fileName = fileName || "新建 Microsoft Excel 工作表.xls";    formId = formId || "form";    // excelExportURL定义在layout.jsp    $("<form>", {id:"exportExcelForm", action:"exportExcel" + options.url.substring(options.url.indexOf('?')), method:"post"}).appendTo("body");    $("<div>",{id:'excelGrid'}).appendTo($("body"));    excelAddInput("fileName", fileName);    var optionColumns = options.columns[0];    for (var k in sheetName) {        excelAddInput("ems["+k+"].sheetName", sheetName[k]);        for (var i=0;i < optionColumns.length; i++) {            excelAddInput("ems["+k+"].eds[0]["+i+"].field", optionColumns[i].field);            excelAddInput("ems["+k+"].eds[0]["+i+"].title", optionColumns[i].title);        }    }    if (typeof (countFields) != 'undefined') {        for (var i = 0; i < countFields.length; i++) {            excelAddInput("countFields", countFields.join(","));        }    }    $("#excelExportButton").click(function() {        $("#excelDataDiv").remove();        $("<div>",{id:'excelDataDiv'}).appendTo($("#exportExcelForm"));        $.each($("#" + formId).serializeArray(),function(){            excelAddInputData(this.name, this.value);        });        $("#exportExcelForm").submit();    });}function excelAddInput(name, value) {    $("<input>",{type:'hidden', val:value, name:name}).appendTo($("#exportExcelForm"));}function excelAddInputData(name, value) {    $("<input>",{type:'hidden', val:value, name:name}).appendTo($("#excelDataDiv"));}function excelGetFieldValue(field, obj) {    for (var name in obj) {        if (name == field) {            return obj[name];        }    }    return null;}var reTag = /<(?:.|\s)*?>/g;// 去掉html标签function excelGetFormatValue(optionColumns, rows, key, value) {    if (null == value) {        return "";    }    for (var i=0;i < optionColumns.length; i++) {        if (key == optionColumns[i].field) {            if (optionColumns[i].formatter) {                value = optionColumns[i].formatter(value, rows).replace(reTag,"");            }            return value;        }    }    return value;}